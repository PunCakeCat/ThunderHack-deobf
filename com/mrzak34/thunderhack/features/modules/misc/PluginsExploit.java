//Deobfuscated with https://github.com/SimplyProgrammer/Minecraft-Deobfuscator3000 using mappings "C:\Users\38096\Downloads\Minecraft-Deobfuscator3000-master\1.12 stable mappings"!

//Decompiled by Procyon!

package com.mrzak34.thunderhack.features.modules.misc;

import com.mrzak34.thunderhack.features.modules.*;
import com.mrzak34.thunderhack.features.command.*;
import net.minecraft.util.math.*;
import net.minecraft.network.play.client.*;
import net.minecraft.network.*;
import com.mrzak34.thunderhack.event.events.*;
import net.minecraft.network.play.server.*;
import joptsimple.internal.*;
import java.util.*;
import net.minecraftforge.fml.common.eventhandler.*;

public class PluginsExploit extends Module
{
    public PluginsExploit() {
        super("PluginsExploit", "\u0432\u044b\u0432\u043e\u0434\u0438\u0442 \u0441\u043f\u0438\u0441\u043e\u043a \u043f\u043b\u0430\u0433\u0438\u043d\u043e\u0432-\u0441\u0435\u0440\u0432\u0435\u0440\u0430", Category.MISC, true, false, false);
    }
    
    @Override
    public void onEnable() {
        super.onEnable();
        Command.sendMessage("Attempting to obtain the plugins");
        final CPacketTabComplete packet = new CPacketTabComplete("/", (BlockPos)null, false);
        PluginsExploit.mc.player.connection.sendPacket((Packet)packet);
    }
    
    @SubscribeEvent
    public void onReceivePacket(final PacketEvent event) {
        if (event.getPacket() instanceof SPacketTabComplete) {
            final SPacketTabComplete s3APacketTabComplete = (SPacketTabComplete)event.getPacket();
            final List<String> plugins = new ArrayList<String>();
            final String[] commands;
            final String[] array;
            final String[] getMatches = array = (commands = s3APacketTabComplete.getMatches());
            for (final String s : array) {
                final String[] command = s.split(":");
                if (command.length > 1) {
                    final String pluginName = command[0].replace("/", "");
                    if (!plugins.contains(pluginName)) {
                        plugins.add(pluginName);
                    }
                }
            }
            Collections.sort(plugins);
            if (!plugins.isEmpty()) {
                Command.sendMessage("Plugins §7(§8" + plugins.size() + "§7): §9" + Strings.join((String[])plugins.toArray(new String[0]), "§7,  §9"));
            }
            else {
                Command.sendMessage("\u043f\u0430\u043a\u0435\u0442 SPacketTabComplete \u043e\u0442\u043a\u043b\u043e\u043d\u0435\u043d!!!");
            }
            this.disable();
        }
    }
}
